name: Deploy Devtalk Project

on:
  push:
    branches:
      - main

env:
  SPRING_REPOSITORY: devtalk-server-ecr
  NGINX_REPOSITORY: devtalk-nginx-ecr
  IMAGE_TAG: latest

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Spring Boot Jar
        run: |
          ./gradlew clean build -x test

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE_ARN }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "false"

      - name: Build and Push Spring Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker build -t $REGISTRY/${{ env.SPRING_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/${{ env.SPRING_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Build and Push Nginx Image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          cd nginx
          docker build -t $REGISTRY/${{ env.NGINX_REPOSITORY }}:${{ env.IMAGE_TAG }} .
          docker push $REGISTRY/${{ env.NGINX_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_PASSWORD: ${{ steps.login-ecr.outputs.docker_password_061391278365_dkr_ecr_ap_northeast_2_amazonaws_com }}
        with:
            host: ${{ secrets.DEPLOY_SERVER_HOST }}
            username: ${{ secrets.DEPLOY_SERVER_USER }}
            key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
            port: ${{ secrets.DEPLOY_SERVER_PORT }}
            envs: ECR_REGISTRY,ECR_PASSWORD,SPRING_REPOSITORY,NGINX_REPOSITORY,IMAGE_TAG   # ② EC2로 전달
            script: |
              echo "Using Registry: $ECR_REGISTRY"
              echo "$ECR_PASSWORD" | docker login --username AWS --password-stdin "$ECR_REGISTRY"
              cd /home/ubuntu/Devtalk-Server-Application
              docker-compose -f docker-compose-prod.yml pull
              docker-compose -f docker-compose-prod.yml up -d
